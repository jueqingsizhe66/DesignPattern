public class TestBridge {
    /*
干一件事情有多种不同的实现，那么可以抽象出一个通用的接口，不同的实现用不同的实现类。(这种说法有点类似策略者模式)
使用这个接口可以开发各种各样的功能。这个接口就相当于连接业务系统和不同实现类的“桥。”
	复杂的架构可能同时应用多种模式。

	责任链模式中的TextReader就是一种桥接模式；
	JDBC也是一种桥接模式，因为不同数据库驱动的底层实现不一样，但是都是用通用的JDBC接口。

     */
}
